import { User, Playlist, Song, PlaylistSong, PlayHistory, Session } from '@prisma/client'

// 基礎資料庫類型 (從 Prisma 生成)
export type DatabaseUser = User
export type DatabasePlaylist = Playlist
export type DatabaseSong = Song
export type DatabasePlaylistSong = PlaylistSong
export type DatabasePlayHistory = PlayHistory
export type DatabaseSession = Session

// 擴展類型定義
export interface UserWithRelations extends User {
  playlists?: PlaylistWithSongs[]
  playHistory?: PlayHistoryWithSong[]
  _count?: {
    playlists?: number
    playHistory?: number
  }
}

export interface PlaylistWithSongs extends Playlist {
  songs?: PlaylistSongWithSong[]
  user?: User
  _count?: {
    songs?: number
    playHistory?: number
  }
}

export interface PlaylistWithUser extends Playlist {
  user: User
}

export interface SongWithStats extends Song {
  _count?: {
    playlists?: number
    playHistory?: number
  }
  playlists?: PlaylistSong[]
  playHistory?: PlayHistory[]
}

export interface PlaylistSongWithSong extends PlaylistSong {
  song: Song
  user?: User
}

export interface PlaylistSongWithPlaylist extends PlaylistSong {
  playlist: Playlist
  song: Song
  user?: User
}

export interface PlayHistoryWithSong extends PlayHistory {
  song: Song
  playlist?: Playlist
  user?: User
}

export interface PlayHistoryWithDetails extends PlayHistory {
  song: Song
  playlist?: Playlist
  user: User
}

// 用戶偏好設定類型
export interface UserPreferences {
  theme?: 'light' | 'dark' | 'auto'
  autoplay?: boolean
  volume?: number
  repeat?: 'none' | 'one' | 'all'
  shuffle?: boolean
  language?: string
  notifications?: {
    newSongs?: boolean
    playlistUpdates?: boolean
    recommendations?: boolean
  }
  privacy?: {
    showRecentlyPlayed?: boolean
    showPlaylists?: boolean
    allowCollaborations?: boolean
  }
}

// 歌曲元數據類型
export interface SongMetadata {
  genre?: string
  language?: string
  tags?: string[]
  mood?: string
  energy?: number
  danceability?: number
  acousticness?: number
  instrumentalness?: number
  liveness?: number
  speechiness?: number
  valence?: number
}

// 播放清單元數據類型
export interface PlaylistMetadata {
  tags?: string[]
  mood?: string
  description?: string
  coverColor?: string
  isAutoGenerated?: boolean
  lastPlayedAt?: string
  createdSource?: 'manual' | 'recommended' | 'import'
}

// 查詢參數類型
export interface UserQueryParams {
  include?: {
    playlists?: boolean
    playHistory?: boolean
    _count?: boolean
  }
  where?: {
    isActive?: boolean
    emailVerified?: boolean
    createdAt?: {
      gte?: Date
      lte?: Date
    }
  }
  orderBy?: {
    createdAt?: 'asc' | 'desc'
    updatedAt?: 'asc' | 'desc'
    nickname?: 'asc' | 'desc'
  }
  skip?: number
  take?: number
}

export interface PlaylistQueryParams {
  include?: {
    songs?: boolean | {
      include?: {
        song?: boolean
        user?: boolean
      }
      orderBy?: {
        position?: 'asc' | 'desc'
        addedAt?: 'asc' | 'desc'
      }
    }
    user?: boolean
    playHistory?: boolean
    _count?: boolean
  }
  where?: {
    userId?: number
    isPublic?: boolean
    isCollaborative?: boolean
    name?: {
      contains?: string
      mode?: 'insensitive'
    }
    createdAt?: {
      gte?: Date
      lte?: Date
    }
  }
  orderBy?: {
    createdAt?: 'asc' | 'desc'
    updatedAt?: 'asc' | 'desc'
    name?: 'asc' | 'desc'
    playCount?: 'asc' | 'desc'
    songCount?: 'asc' | 'desc'
  }
  skip?: number
  take?: number
}

export interface SongQueryParams {
  include?: {
    playlists?: boolean | {
      include?: {
        playlist?: boolean
        user?: boolean
      }
    }
    playHistory?: boolean
    _count?: boolean
  }
  where?: {
    youtubeId?: string
    title?: {
      contains?: string
      mode?: 'insensitive'
    }
    artist?: {
      contains?: string
      mode?: 'insensitive'
    }
    isAvailable?: boolean
    duration?: {
      gte?: number
      lte?: number
    }
    createdAt?: {
      gte?: Date
      lte?: Date
    }
  }
  orderBy?: {
    createdAt?: 'asc' | 'desc'
    title?: 'asc' | 'desc'
    artist?: 'asc' | 'desc'
    duration?: 'asc' | 'desc'
    viewCount?: 'asc' | 'desc'
  }
  skip?: number
  take?: number
}

export interface PlayHistoryQueryParams {
  include?: {
    song?: boolean
    playlist?: boolean
    user?: boolean
  }
  where?: {
    userId?: number
    songId?: number
    playlistId?: number
    completed?: boolean
    playedAt?: {
      gte?: Date
      lte?: Date
    }
  }
  orderBy?: {
    playedAt?: 'asc' | 'desc'
    playDuration?: 'asc' | 'desc'
  }
  skip?: number
  take?: number
}

// 統計類型
export interface UserStats {
  totalPlaylists: number
  totalSongs: number
  totalPlayTime: number
  favoriteGenres: Array<{
    genre: string
    count: number
  }>
  recentActivity: PlayHistoryWithSong[]
}

export interface PlaylistStats {
  totalDuration: number
  songCount: number
  playCount: number
  lastPlayedAt?: Date
  popularSongs: Array<{
    song: Song
    playCount: number
  }>
}

export interface SongStats {
  totalPlays: number
  uniqueListeners: number
  playlistCount: number
  averageRating?: number
  lastPlayedAt?: Date
  topPlaylists: Array<{
    playlist: Playlist
    addedAt: Date
  }>
}

// 數據庫操作結果類型
export interface DatabaseOperationResult<T = any> {
  success: boolean
  data?: T
  error?: string
  count?: number
}

export interface PaginatedResult<T> {
  data: T[]
  pagination: {
    page: number
    limit: number
    total: number
    pages: number
    hasNext: boolean
    hasPrev: boolean
  }
}

// 批量操作類型
export interface BulkCreateSongsData {
  songs: Array<Omit<Song, 'id' | 'createdAt' | 'updatedAt'>>
}

export interface BulkUpdatePlaylistSongsData {
  playlistId: number
  songs: Array<{
    songId: number
    position: number
    addedBy?: number
  }>
}

// 搜索結果類型
export interface SearchResults {
  songs: SongWithStats[]
  playlists: PlaylistWithUser[]
  users: UserWithRelations[]
  total: {
    songs: number
    playlists: number
    users: number
  }
}

// 會話數據類型
export interface SessionData {
  userId: number
  email: string
  nickname: string
  preferences?: UserPreferences
  lastActivity: Date
  ipAddress?: string
  userAgent?: string
}

// 錯誤類型
export interface DatabaseError extends Error {
  code?: string
  constraint?: string
  detail?: string
  table?: string
  column?: string
}

// 常用聯合類型
export type PlaylistVisibility = 'public' | 'private' | 'collaborative'
export type SongAvailability = 'available' | 'unavailable' | 'restricted'
export type UserRole = 'user' | 'premium' | 'admin'
export type PlayHistoryStatus = 'started' | 'paused' | 'completed' | 'skipped'

// 導出所有類型的集合
export * from '@prisma/client'